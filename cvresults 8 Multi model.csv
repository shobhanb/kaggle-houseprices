,index,mean_fit_time,std_fit_time,mean_score_time,std_score_time,param_reg__estimator,params,split0_test_score,split1_test_score,split2_test_score,split3_test_score,split4_test_score,mean_test_score,std_test_score,rank_test_score,model
0,0,0.306461763381958,0.010011468059874094,0.06977424621582032,0.0020433105105076487,SVR(C=0.75),{'reg__estimator': SVR(C=0.75)},-0.12093584174386345,-0.1415879446477663,-0.1384722104171599,-0.1234202853194778,-0.1265587901467451,0.1301950144550025,0.008284469720477413,4,SVR(C=0.75)
1,1,0.12992844581604004,0.0065558852583858275,0.03499560356140137,0.007425039105164605,Ridge(alpha=1.75),{'reg__estimator': Ridge(alpha=1.75)},-0.12302179638630256,-0.13967413739668785,-0.14299323645832215,-0.12686646277738306,-0.16103845043963844,0.1387188166916668,0.013447855534701915,5,Ridge(alpha=1.75)
2,2,19.20376887321472,1.321283368081948,0.08647518157958985,0.020323685014895423,"RandomForestRegressor(max_depth=16, n_estimators=200)","{'reg__estimator': RandomForestRegressor(max_depth=16, n_estimators=200)}",-0.14141577117821497,-0.16317310082099837,-0.15232822240038776,-0.14185577113175002,-0.14302263138831317,0.14835909938393285,0.008416526025544761,7,"RandomForestRegressor(max_depth=16, n_estimators=200)"
3,3,2.0494449615478514,0.04885352124561336,0.05797743797302246,0.01979048987908315,"XGBRegressor(base_score=None, booster=None, colsample_bylevel=None,
             colsample_bynode=None, colsample_bytree=None, gamma=None,
             gpu_id=None, importance_type='gain', interaction_constraints=None,
             learning_rate=0.08, max_delta_step=None, max_depth=5,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             n_estimators=275, n_jobs=None, num_parallel_tree=None,
             random_state=None, reg_alpha=None, reg_lambda=None,
             scale_pos_weight=None, subsample=None, tree_method=None,
             validate_parameters=None, verbosity=None)","{'reg__estimator': XGBRegressor(base_score=None, booster=None, colsample_bylevel=None,
             colsample_bynode=None, colsample_bytree=None, gamma=None,
             gpu_id=None, importance_type='gain', interaction_constraints=None,
             learning_rate=0.08, max_delta_step=None, max_depth=5,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             n_estimators=275, n_jobs=None, num_parallel_tree=None,
             random_state=None, reg_alpha=None, reg_lambda=None,
             scale_pos_weight=None, subsample=None, tree_method=None,
             validate_parameters=None, verbosity=None)}",-0.11416312565081342,-0.14541535673489864,-0.13712902855949122,-0.11697238422240373,-0.12321339917905724,0.12737865886933286,0.01200568563267429,2,"XGBRegressor(base_score=None, booster=None, colsample_bylevel=None,
             colsample_bynode=None, colsample_bytree=None, gamma=None,
             gpu_id=None, importance_type='gain', interaction_constraints=None,
             learning_rate=0.08, max_delta_step=None, max_depth=5,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             n_estimators=275, n_jobs=None, num_parallel_tree=None,
             random_state=None, reg_alpha=None, reg_lambda=None,
             scale_pos_weight=None, subsample=None, tree_method=None,
             validate_parameters=None, verbosity=None)"
4,4,0.49478745460510254,0.031962139724258945,0.031122589111328126,0.0018852979834583154,"LGBMRegressor(learning_rate=0.05, n_estimators=120)","{'reg__estimator': LGBMRegressor(learning_rate=0.05, n_estimators=120)}",-0.1289707344938462,-0.15234366040054173,-0.14702522967159387,-0.13270979577219993,-0.13378153171811744,0.13896619041125985,0.009053586203872333,6,"LGBMRegressor(learning_rate=0.05, n_estimators=120)"
5,5,16.50978183746338,1.93225706015336,0.05207414627075195,0.0303321053005699,<catboost.core.CatBoostRegressor object at 0x7fb4a3776ac0>,{'reg__estimator': <catboost.core.CatBoostRegressor object at 0x7fb4a3776ac0>},-0.10857171510868978,-0.13891433588430868,-0.13260016883903686,-0.1162203914628313,-0.12223905802804363,0.12370913386458207,0.010932817602922591,1,<catboost.core.CatBoostRegressor object at 0x7fb4a3776ac0>
6,6,2.4329771518707277,0.03919470506921061,0.27088499069213867,0.009864928501747725,"StackingRegressor(estimators=[('svr', SVR(C=0.75)),
                              ('ridge', Ridge(alpha=1.75)),
                              ('lasso', Lasso(alpha=0.25)),
                              ('knr',
                               KNeighborsRegressor(algorithm='brute',
                                                   n_neighbors=9, p=1.0,
                                                   weights='distance')),
                              ('dt', DecisionTreeRegressor(max_depth=6))])","{'reg__estimator': StackingRegressor(estimators=[('svr', SVR(C=0.75)),
                              ('ridge', Ridge(alpha=1.75)),
                              ('lasso', Lasso(alpha=0.25)),
                              ('knr',
                               KNeighborsRegressor(algorithm='brute',
                                                   n_neighbors=9, p=1.0,
                                                   weights='distance')),
                              ('dt', DecisionTreeRegressor(max_depth=6))])}",-0.11239054597031381,-0.13816007952428913,-0.13293860880061106,-0.11860444327828776,-0.13606218438562862,0.12763117239182606,0.010235890406664856,3,"StackingRegressor(estimators=[('svr', SVR(C=0.75)),
                              ('ridge', Ridge(alpha=1.75)),
                              ('lasso', Lasso(alpha=0.25)),
                              ('knr',
                               KNeighborsRegressor(algorithm='brute',
                                                   n_neighbors=9, p=1.0,
                                                   weights='distance')),
                              ('dt', DecisionTreeRegressor(max_depth=6))])"
